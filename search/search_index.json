{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Index","text":""},{"location":"#spline-architect-procedural-walls-buildings-and-structures-with-splines","title":"Spline Architect \u2013 Procedural Walls, Buildings, and Structures with Splines","text":"<p>Spline Architect is a plugin for Unreal Engine 5 that enables fast, non-destructive creation of simple or complex structures and buildings using modular meshes placed along spline paths.</p>"},{"location":"#key-features","title":"Key Features","text":"<ul> <li>Precise control using native UE5 Splines</li> <li>Modular meshes are laid out directly \u2013 no need to merge them into unique, non-reusable assets</li> <li>Auto-generated meshes (corners, floors) are intelligently named and reused whenever possible</li> <li>Preset system allows you to quickly save and reuse building/structure templates</li> <li>Structures can be baked either into <code>InstancedStaticMesh</code> components (for performance) or into individual <code>StaticMesh</code> components (for easy post-editing)</li> <li>Ability to convert generated structures into standard UE5 actors with components \u2013 making them fully portable to other projects without requiring the plugin</li> </ul>"},{"location":"1.%20Intro/1.installation/","title":"Installation","text":"<p>This page will guide you through activating and configuring the Spline Architect plugin for your project.</p>"},{"location":"1.%20Intro/1.installation/#1-download-the-plugin","title":"1. Download the Plugin","text":"<p>If you received a free trial version by email, copy the plugin files into your project\u2019s <code>/YourProject/Plugins/</code> folder.</p> <p></p> <p>If you purchased Spline Architect from the FAB Marketplace, download the plugin via the Epic Games Launcher and enable it in your project:</p> <ul> <li>Locate Spline Architect in the FAB Library section and click Install to Engine</li> </ul> <p></p> <ul> <li>Select your Unreal Engine version and install the plugin</li> </ul> <p> </p> <p></p>"},{"location":"1.%20Intro/1.installation/#2-enable-the-plugin","title":"2. Enable the Plugin","text":"<p>Open your Unreal Engine project, go to Edit &gt; Plugins, find Spline Architect, check the box to enable it, and restart the editor.</p> <p></p> <p></p>"},{"location":"1.%20Intro/1.installation/#3-launch-the-spline-architect-widget","title":"3. Launch the Spline Architect Widget","text":"<ul> <li>Open Window &gt; Open Spline Architect Widget</li> </ul> <ul> <li>Pin the widget to your editor layout like any other panel for convenient access.</li> </ul>"},{"location":"1.%20Intro/2.how-it-works/","title":"How Does It Work?","text":""},{"location":"1.%20Intro/2.how-it-works/#principle-of-operation","title":"Principle of Operation","text":"Description Example Spline Architect allows creating walls and buildings by arranging modular meshes along a spline. Meshes at corners are generated dynamically and can be either straight or curved. Floor meshes are also generated dynamically and uniquely for each <code>SplineArchitectWall</code>. Generation occurs in the <code>SplineArchitectWall</code> actor, inside the <code>OnConstruct()</code> function. This happens every time the actor is loaded unless the structure is baked. When baked, all \u201cone-time\u201d meshes are converted into regular <code>StaticMesh</code> components, and the actor no longer executes any logic when loading. Baked components can be modified manually, and changes will persist until the <code>SplineArchitectWall</code> is baked again. During baking, <code>StaticMesh</code> assets for corners and floors are created. These meshes are saved with consistent naming and reused across different structures whenever possible."},{"location":"1.%20Intro/2.how-it-works/#important-details","title":"Important Details","text":"Description Example Spline Architect expects your modular meshes to be configured as follows:- Their length is aligned along the X axis- Pivot point is centered on X and Y axes and at floor level on Z axis All <code>SplineArchitectWall</code> actors must be baked before packaging the game; otherwise, meshes will not appear in the packaged game."},{"location":"2.%20Overview/Components/1.Spline-Architect-Wall/","title":"SplineArchitectWall","text":""},{"location":"2.%20Overview/Components/1.Spline-Architect-Wall/#1-what-is-splinearchitectwall","title":"1. What is <code>SplineArchitectWall</code>?","text":"<p><code>SplineArchitectWall</code> is the main class, or actor, where details made from modular meshes will be generated. For <code>SplineArchitectWall</code> to generate meshes, it must have a <code>SplineComponent</code> component.</p> <p></p> <p>When attaching one <code>SplineArchitectWall</code> to another, the attached actor will be positioned on its parent and generate meshes on top, like a second floor or similar.</p> <p></p>"},{"location":"2.%20Overview/Components/1.Spline-Architect-Wall/#2-how-to-create-a-splinearchitectwall","title":"2. How to create a <code>SplineArchitectWall</code>?","text":"<p>You can create a <code>SplineArchitectWall</code> in two ways:</p> <ul> <li>The first way is to find it in the actor creation menu and drag it into the level.</li> </ul> <p></p> <p>For the created actor to generate meshes, you need to add a <code>SplineComponent</code> component to the actor itself.</p> <p></p> <ul> <li>The second and easier way is to simply press the \"Add Spline Wall\" button in the Spline Architect utility widget. This button does the same as the instructions above. A new <code>SplineArchitectWall</code> will spawn at the viewport center in the level and have a <code>SplineComponent</code> component added.</li> </ul> <p></p> <ul> <li>You can create a new <code>SplineArchitectWall</code> and attach it to the selected <code>SplineArchitectWall</code> by pressing \"Add Wall to Selected\".</li> </ul> <p></p>"},{"location":"2.%20Overview/Components/1.Spline-Architect-Wall/#3-splinearchitectwall-parameters","title":"3. <code>SplineArchitectWall</code> parameters","text":""},{"location":"2.%20Overview/Components/1.Spline-Architect-Wall/#1-preset","title":"1. Preset","text":"<p>The Preset category has a single parameter \"Preset,\" which is a struct specifying exactly how the <code>SplineArchitectWall</code> will be generated, which meshes will be used, etc.</p>"},{"location":"2.%20Overview/Components/1.Spline-Architect-Wall/#2-adjust-spline","title":"2. Adjust Spline","text":"<p>The Adjust Spline category contains functions for working with the <code>SplineComponent</code> in this actor:</p> <ul> <li>Flatten Spline Points sets all spline points' Z positions to the first spline point's Z position, useful if any spline point was accidentally moved on the Z axis.</li> <li>Gridify Spline Points rounds spline points' positions according to the Grid Size vector. Useful for buildings, as by default you might want to copy positions from one point to another; otherwise, manual adjustments result in crooked lines.</li> <li>Mirror Spline X and Y mirrors (flips) spline points, useful if you want two symmetrical walls\u2014you can copy one and mirror it.</li> <li>Reverse Spline Points reverses the order of spline points, useful if a wall is facing the wrong direction.</li> <li>Grid Size specifies the rounding precision for spline point positions.</li> <li>Auto Gridify \u2013 when enabled, spline points' positions are automatically rounded.</li> </ul>"},{"location":"2.%20Overview/Components/1.Spline-Architect-Wall/#3-baking","title":"3. Baking","text":"<p>The Baking category contains functions and parameters needed to bake or unbake the <code>SplineArchitectWall</code> actor. A baked actor will no longer regenerate meshes, and its WallPreset will be locked and unmodifiable until the \"UnBake\" function is used.</p> <p>More about baking</p> <ul> <li>Bake button bakes this wall</li> <li>UnBake button unbakes this wall</li> <li>Baked boolean cannot be modified; it just shows if this actor is baked or not</li> <li>Bake Method specifies how the actor will be baked: either \"Instanced\" or \"Components\". \"Instanced\" uses <code>InstancedStaticMeshComponent</code> for better rendering performance but harder editing; \"Components\" uses <code>StaticMeshComponent</code>, easier to edit transforms after baking.</li> </ul>"},{"location":"2.%20Overview/Components/1.Spline-Architect-Wall/#4-controls","title":"4. Controls","text":"<p>The Controls category contains several functions and parameters to manage this specific <code>SplineArchitectWall</code> actor:</p> <ul> <li>CenterActorTransform button centers the actor to the average position of the main <code>SplineComponent</code> spline points.</li> <li>ResetActorTransform button resets the actor\u2019s scale to (1,1,1) and position to the first spline point\u2019s position.</li> <li>BooleansToUse array specifying which <code>SplineArchitectBoolean</code> actors this <code>SplineArchitectWall</code> uses to cut holes in floor or ceiling meshes.</li> <li>Seed specifies the random seed used by this actor when randomization parameters are applied, to avoid similar randomization results among actors.</li> </ul>"},{"location":"2.%20Overview/Components/2.Spline-Architect-Custom-Piece/","title":"SplineArchitectCustomPiece","text":""},{"location":"2.%20Overview/Components/2.Spline-Architect-Custom-Piece/#1-what-is-splinearchitectcustompiece","title":"1. What is <code>SplineArchitectCustomPiece</code>?","text":"<p><code>SplineArchitectCustomPiece</code> is an actor that attaches to a <code>SplineArchitectWall</code> actor and allows you to insert any mesh between walls.</p> <p></p>"},{"location":"2.%20Overview/Components/2.Spline-Architect-Custom-Piece/#2-how-to-create-a-splinearchitectcustompiece","title":"2. How to create a <code>SplineArchitectCustomPiece</code>?","text":"<p>There are two ways to create a <code>SplineArchitectCustomPiece</code> actor:</p> <ul> <li>The first way is to find it in the actor creation menu and drag it into the level. Then you need to attach it to a <code>SplineArchitectWall</code> actor, and it will snap to its parent <code>SplineArchitectWall</code> actor.</li> </ul> <p></p> <ul> <li>The second way is to simply press the \"Add Custom Piece\" button in the Spline Architect utility widget. This button does the same as the instruction above. The new <code>SplineArchitectCustomPiece</code> will spawn at the viewport center in the level and attach to the selected <code>SplineArchitectWall</code> actor.</li> </ul> <p></p>"},{"location":"2.%20Overview/Components/2.Spline-Architect-Custom-Piece/#3-splinearchitectcustompiece-parameters","title":"3. <code>SplineArchitectCustomPiece</code> parameters","text":"<ul> <li>Lock Position Locks the Custom Piece so its position remains fixed, even if the <code>SplineArchitectWall</code> is moved or changed. Useful when, for example, doors should always stay in the same spot in the level.</li> <li>Unlock Position Unlocks the Custom Piece position so it moves along with its <code>SplineArchitectWall</code> parent again.</li> <li>Custom Piece Type The Custom Piece can be either Segment or Corner type. Segment type Custom Pieces are inserted into the wall, like doors or windows. Corner type Custom Pieces can modify specific corner parameters, for example, to make a wall corner rounded.</li> <li>Custom Piece Mesh The mesh used as the Custom Piece.</li> <li>Input Key on Spline Indicates the position on the spline where the Custom Piece will be inserted. If the Custom Piece is moved manually, this parameter is found based on its position. You can also specify an exact spline key if you want to insert the Custom Piece perfectly centered between two spline points.</li> <li>Num Meshes How many times the Custom Piece will be repeated. Useful if you want to repeat the Custom Piece multiple times within a segment. You can enter a very high number to fill the entire segment.</li> <li>Override Length If <code>true</code>, allows manual adjustment of the Custom Piece length; if <code>false</code>, the length is calculated automatically based on the Custom Piece mesh (length along the X axis).</li> <li>Custom Piece Length The length of the Custom Piece, either automatic or manual depending on the Override Length parameter.</li> <li>Add to Scale A vector added to the Custom Piece\u2019s scale. Useful for manually increasing or decreasing the Custom Piece size.</li> <li>Insert Type The way the Custom Piece is inserted. Can be <code>Insert</code> or <code>Overlap</code>. When <code>Insert</code>, the segment is cut out and replaced with the Custom Piece; when <code>Overlap</code>, the Custom Piece is simply placed over the existing segment.</li> <li>Child Actor Class The class used as a Child Actor. Useful if you want to add extra functionality to the Custom Piece, e.g., dynamically opening doors.</li> <li>Location Locked Indicates whether the Custom Piece position is locked or not.</li> <li>Locked Location The position used when Location Locked is <code>true</code>. When using Lock Position, this is set to the current Custom Piece position. Can be manually modified if needed.</li> </ul>"},{"location":"2.%20Overview/Components/3.Spline-Architect-Boolean/","title":"SplineArchitectBoolean","text":""},{"location":"2.%20Overview/Components/3.Spline-Architect-Boolean/#1-what-is-splinearchitectboolean","title":"1. What is <code>SplineArchitectBoolean</code>?","text":"<p><code>SplineArchitectBoolean</code> is an actor that allows performing boolean operations on <code>SplineArchitectWall</code> floor or ceiling meshes. This lets you cut holes for stairs or similar features. The Boolean shape can be any StaticMesh asset.</p>"},{"location":"2.%20Overview/Components/3.Spline-Architect-Boolean/#2-how-to-create-a-splinearchitectboolean","title":"2. How to create a <code>SplineArchitectBoolean</code>?","text":"<p>There are two ways to create a <code>SplineArchitectBoolean</code> actor:</p> <ul> <li>The first way is to find it in the actor creation menu and drag it into the level.</li> </ul> <p></p> <p></p> <ul> <li>The second way is simply to press the \"Add Boolean\" button in the Spline Architect utility widget. This button does exactly the same as described above. The new <code>SplineArchitectBoolean</code> will spawn at the center of the viewport in the level. If it touches a <code>SplineArchitectWall</code>, it will automatically be added to the \"Booleans to Use\" array in that <code>SplineArchitectWall</code> actor.</li> </ul>"},{"location":"2.%20Overview/Components/3.Spline-Architect-Boolean/#3-how-to-use-splinearchitectboolean","title":"3. How to use <code>SplineArchitectBoolean</code>?","text":"Description Image A <code>SplineArchitectBoolean</code> actor can be used with one or multiple <code>SplineArchitectWall</code> actors. To cut a hole in a <code>SplineArchitectWall</code>, you must add the <code>SplineArchitectBoolean</code> to the \"Booleans to Use\" array in the <code>SplineArchitectWall</code> actor. Booleans can be of any shape; the shape is copied from a <code>StaticMesh</code> asset. When changing the mesh or position of a <code>SplineArchitectBoolean</code>, the associated <code>SplineArchitectWall</code> actors won\u2019t update automatically and need to be regenerated. This can be done easily by selecting the <code>SplineArchitectWall</code> actor and pressing \"UnBake\" or \"Bake\" on the actor itself, or \"Unbake Connected\" or \"Rebake Connected\" in the utility widget."},{"location":"2.%20Overview/Components/4.Wall-preset/","title":"Wall Preset","text":""},{"location":"2.%20Overview/Components/4.Wall-preset/#1-what-is-a-wall-preset","title":"1. What is a Wall Preset?","text":"<p>A Wall Preset is a Struct that defines how a generated <code>SplineArchitectWall</code> actor will look. It's located in the Preset category of a <code>SplineArchitectWall</code> actor (in the Details panel).</p> <p></p>"},{"location":"2.%20Overview/Components/4.Wall-preset/#2-what-do-the-wall-preset-parameters-do","title":"2. What do the Wall Preset parameters do?","text":""},{"location":"2.%20Overview/Components/4.Wall-preset/#floorsurfaces-parameters-fwallpreset","title":"FloorSurfaces parameters (FWallPreset):","text":"Parameter Example WallHeight\u2013 Sets the height of the wall; this value determines the scale for all meshes. HeightOverride\u2013 If <code>true</code>, allows manual override of wall height; otherwise, <code>WallHeight</code> is taken from the first <code>WallMeshes</code> array element. WallLength\u2013 Sets the length of the wall; spline segments will be divided according to this value. LengthOverride\u2013 If <code>true</code>, allows manual override of wall length; otherwise, <code>WallLength</code> is taken from the first <code>WallMeshes</code> array element. CornerLength\u2013 Sets the corner length; this value is subtracted from segments to form a corner. CornerLengthOverride\u2013 If <code>true</code>, allows manual override of corner length; otherwise, it's taken from <code>CornerMesh</code>. RandomizeSegmentsBy\u2013 Randomly alters segment lengths up to the given threshold. WallZHandling\u2013 Determines how to handle Z-axis height differences between segments (<code>KeepZ</code>, <code>FollowSpline</code>, <code>Skew</code>). SkipPieces\u2013 Allows skipping specific segments (straight or angled). Inset\u2013 Offsets meshes inward or outward from the spline by a given distance. OverlapPiecesBy\u2013 Overlap size to prevent gaps caused by imperfect mesh edges. NumFloors\u2013 Number of times to duplicate the segments vertically with offset equal to <code>WallHeight</code> (number of floors). WallMeshes\u2013 Main meshes for wall segments; the best fit is chosen based on segment length. FillerWallMeshes\u2013 Additional meshes used to fill gaps so that the main <code>WallMeshes</code> don't stretch or shrink. MinFillerWallLength\u2013 Minimum length for filler meshes; shorter meshes won\u2019t be used. KeepWorldScale\u2013 If <code>true</code>, meshes are not scaled to fit the segment, and retain their original scale. WorldScale\u2013 Original scale applied to meshes when <code>KeepWorldScale</code> is <code>true</code>. CornerMesh\u2013 Mesh used to form corners. CornerType\u2013 Type of corner: <code>Straight</code>, <code>Bend</code>, <code>Chamfer</code>, or <code>Pipe</code>. OffsetBy\u2013 Offsets all meshes by a given vector. RandomizeLocationBy\u2013 Randomizes mesh positions within the given vector (recommended small values to avoid Z-fighting). FloorSurfaces\u2013 Array of floor surface configurations; each element defines the parameters of a floor surface. PostConfigurations\u2013 Array of post configurations determining how and where posts will be generated. RandomisationSettings\u2013 Randomization settings for mesh distribution and transforms. MaterialParameters\u2013 Array of material parameters allowing customization of specific material properties on certain meshes."},{"location":"2.%20Overview/Components/4.Wall-preset/#floorsurfaces-parameters-ffloordata","title":"FloorSurfaces parameters (FFloorData):","text":"Parameter Example Material\u2013 Material applied to the floor surface. AlignTo\u2013 Floor alignment relative to wall: <code>Top</code>, <code>Center</code>, or <code>Bottom</code>. ZOffset\u2013 Vertical offset for floor placement. Inset\u2013 Inward or outward offset of floor from the wall contour. Thickness\u2013 Floor thickness (extrusion height). Subdivisions\u2013 Controls polygon count of the floor. BendsResolution\u2013 Vertex spacing for curved corners. UVScale\u2013 Scales UV coordinates of the floor. FillColor\u2013 Vertex color applied to all non-edge vertices. EdgesColor\u2013 Vertex color for edges. ColorBlurIterations\u2013 More iterations = smoother vertex color blending. UseDelaunayTriangulation\u2013 Enables Delaunay triangulation for better mesh quality. If the floor mesh doesn't work, try disabling this."},{"location":"2.%20Overview/Components/4.Wall-preset/#postconfigurations-parameters-fpostdata","title":"PostConfigurations parameters (FPostData):","text":"Parameter Example PostMesh\u2013 Mesh used for generating posts. GenerationMethod\u2013 Method for placing posts: <code>OnCorners</code>, <code>OnSplinePoints</code>, <code>BetweenSegments</code>, <code>OnCustomPieces</code>, <code>Periodically</code>, <code>StartAndEnd</code>. AverageDirections\u2013 Used only when <code>GenerationMethod</code> is <code>OnSplinePoints</code>. Averages directions. PeriodDistance\u2013 Used when <code>GenerationMethod</code> is <code>Periodically</code>. Defines distance between posts. PostOffset\u2013 Offsets posts by a vector (X = along spline, Y = inward/outward, Z = vertical). AddRotation\u2013 Adds rotation to all posts. bScaleToWallHeight\u2013 Automatically scales post to match <code>WallHeight</code>. PostScale\u2013 Adjusts the scale of the post. SkipRule\u2013 Can skip posts if the segment is flat or angled."},{"location":"2.%20Overview/Components/4.Wall-preset/#randomisationsettings-parameters-frandomsettings","title":"RandomisationSettings parameters (FRandomSettings):","text":"Parameter Example RandomMeshes\u2013 Array of <code>FRandomMeshes</code> structs defining random replacement rules for meshes."},{"location":"2.%20Overview/Components/4.Wall-preset/#frandommeshes-parameters","title":"FRandomMeshes parameters:","text":"Parameter Example KeyMesh\u2013 Target mesh to be randomly replaced by one from the <code>RandomMeshes</code> array (including itself). RandomMeshes\u2013 Array of meshes with weights (<code>FRandomMeshWithWeight</code>), from which a random one is selected. Higher weight = higher chance. FitRandomType\u2013 <code>MatchScale</code> or <code>KeepScale</code> \u2013 whether to scale the mesh to fit or keep its original size. Knockout\u2013 Controls how many meshes to randomly remove (0.0f = none, 1.0f = all). MirrorX/Y/Z\u2013 Allows scaling by -1 on specific axes. Only works when converting to <code>StaticMeshComponents</code>. Rot90\u2013 Randomly rotates meshes by 90, 180, or 270 degrees. Rot180\u2013 Randomly rotates meshes by 180 degrees only."},{"location":"2.%20Overview/Components/4.Wall-preset/#materialparameters-parameters-fmatparams","title":"MaterialParameters parameters (FMatParams):","text":"Parameter Example MaterialApplicationMode\u2013 Application mode: <code>Include</code> (only listed), <code>Exclude</code> (all except listed), or <code>All</code>. MaterialReferences\u2013 List of materials to apply parameters to (when mode is not <code>All</code>). MeshApplicationMode\u2013 Mesh selection mode: <code>Include</code>, <code>Exclude</code>, or <code>All</code>. Lets you change material parameters on specific meshes. StaticMeshReferences\u2013 List of meshes to apply parameters to (when mode is not <code>All</code>). Parameters\u2013 Array of material parameters (<code>FMatParam</code>)."},{"location":"2.%20Overview/Components/4.Wall-preset/#fmatparam-parameters","title":"FMatParam parameters:","text":"Parameter Example ParameterName\u2013 Name of the material parameter to modify. ParameterType\u2013 Type of parameter: <code>Float</code> or <code>Vector</code>. FloatValue\u2013 Value when type is <code>Float</code>. ColorValue\u2013 Value when type is <code>Vector</code> (color)."},{"location":"2.%20Overview/Components/5.Widgets/","title":"Widgets","text":"<p>Spline Architect includes two widgets designed to simplify and speed up working with the plugin.</p> <ul> <li>W_SplineArchitectUtilityWidget provides quick functions to add new actors like <code>SplineArchitectWall</code>, <code>SplineArchitectBoolean</code>, or <code>SplineArchitectCustomPiece</code>. It also offers tools to quickly select or bake all/selected/connected <code>SplineArchitectWall</code> actors, as well as convert them to regular actors. There are also utilities for working with Splines.</li> <li>W_WallPresets widget is meant for quickly creating new <code>SplineArchitectWall</code> presets. These can be presets for individual <code>SplineArchitectWall</code> actors or complex presets consisting of multiple walls and <code>CustomPiece</code> elements \u2014 such as entire buildings.</li> </ul> <p>Widgets can be accessed via Window &gt; Open Spline Architect Widget/Wall Presets</p> <p></p>"},{"location":"2.%20Overview/Components/5.Widgets/#utility-widget","title":"Utility Widget","text":""},{"location":"2.%20Overview/Components/5.Widgets/#create","title":"Create","text":"Button Explanation Add Spline Wall Creates a new <code>SplineArchitectWall</code> in the Level and adds a <code>SplineComponent</code> to it. Add Wall to Selected Creates a new <code>SplineArchitectWall</code> in the Level and automatically attaches it to the currently selected <code>SplineArchitectWall</code> (also copies the <code>WallPreset</code> from the selected one). Add CustomPiece Spawns a <code>CustomPiece</code> at the center of the screen and attaches it to the selected <code>SplineArchitectWall</code>. Add Boolean Spawns a <code>SplineArchitectBoolean</code> at the screen center. If a <code>SplineArchitectWall</code> is selected, the Boolean is automatically added to its \u201cBooleans to Use\u201d array. Clean Selected Keeps only the main <code>SplineArchitectWall</code> and deletes all attached actors. Also resets the <code>WallPreset</code> to default."},{"location":"2.%20Overview/Components/5.Widgets/#select","title":"Select","text":"Button Explanation Select Parents Selects only parent <code>SplineArchitectWall</code> actors with a <code>SplineComponent</code> from the current selection. Select Connected Selects all attached <code>SplineArchitectWall</code>, <code>CustomPiece</code>, and other connected actors \u2014 both parent and child. Walls \u2611\ufe0fPieces \u2611\ufe0fOther \u2611\ufe0f Toggle inclusion of <code>SplineArchitectWall</code>, <code>SplineArchitectCustomPiece</code>, or other actors."},{"location":"2.%20Overview/Components/5.Widgets/#spline","title":"Spline","text":"Button Explanation StaticMesh dropdown \ud83d\udd3d Select a <code>StaticMesh</code> (flat mesh with open edges) to use as a template. Set points Reads border edges from the selected mesh (located in <code>Plugins/SplineArchitect/Meshes/BasicShapes</code>) and generates spline points based on them for selected <code>SplineArchitectWall</code> actors. Refresh Scans the <code>Plugins/SplineArchitect/Meshes/BasicShapes</code> folder and refreshes the dropdown options."},{"location":"2.%20Overview/Components/5.Widgets/#bake","title":"Bake","text":"<p>More on baking</p> Button Explanation Unbake Connected Unbakes all selected <code>SplineArchitectWall</code> actors (both parents and children). ReBake Connected Rebakes all selected <code>SplineArchitectWall</code> actors (both parents and children). Unbake All Unbakes all <code>SplineArchitectWall</code> actors in the Level. ReBake All Bakes all <code>SplineArchitectWall</code> actors in the Level. Bake Unbaked Only bakes <code>SplineArchitectWall</code> actors that haven't been baked yet."},{"location":"2.%20Overview/Components/5.Widgets/#convert","title":"Convert","text":"<p>More on converting</p> Button Explanation Actor per parent \ud83d\udd3d - Actor per wall \u2013 creates one actor for each <code>SplineArchitectWall</code>, with instanced <code>StaticMesh</code> components.- Actor per parent \u2013 creates one actor per <code>SplineArchitectWall</code>, maintaining parent-child hierarchy.- Actor per mesh \u2013 creates a separate <code>StaticMeshActor</code> for each mesh, useful for manual editing. Components \ud83d\udd3d - Instanced \u2013 creates only <code>HierarchicalInstancedStaticMesh</code> components. Fewer draw calls, less editable.- Components \u2013 creates a <code>StaticMeshComponent</code> for each mesh, easier to edit but uses more draw calls. Convert Selected Converts selected <code>SplineArchitectWall</code> actors into regular actors with components. Useful when the project doesn\u2019t have the <code>SplineArchitect</code> plugin. Convert All Converts all <code>SplineArchitectWall</code> actors in the Level into regular actors. Delete original? \u2611\ufe0f Deletes original <code>SplineArchitect</code> actors and keeps only the converted ones."},{"location":"2.%20Overview/Components/5.Widgets/#presets-widget","title":"Presets Widget","text":""},{"location":"2.%20Overview/Components/5.Widgets/#walls","title":"Walls","text":"<ul> <li>Wall-only presets. Allows quick copy/paste of individual <code>SplineArchitectWall</code> presets from selected actors.</li> </ul> Button Description Copy Copies the <code>WallPreset</code> struct from the selected <code>SplineArchitectWall</code> and saves it as a SaveGame file <code>SplineArchitectWallPresets.sav</code> in the \"YourProject\\Saved\\SaveGames\" folder."},{"location":"2.%20Overview/Components/5.Widgets/#buildings","title":"Buildings","text":"<ul> <li>Presets composed of multiple <code>SplineArchitectWall</code> and <code>CustomPiece</code> actors. Allows quick duplication of entire building structures.</li> </ul> Button Description Copy Copies the <code>SplineArchitectWall</code> hierarchy (and optionally <code>CustomPiece</code>s) into a preset. Can be pasted onto another <code>SplineArchitectWall</code> with a spline \u2014 recreating the full stack. Paste Pastes a previously copied hierarchy onto a selected <code>SplineArchitectWall</code>. If it lacks a <code>SplineComponent</code>, it searches for a parent actor with a spline. Copy Pieces? Whether to also copy <code>CustomPiece</code> actors attached to the selected building. PresetName Name of the preset. Save Preset Saves the preset as a SaveGame file <code>SplineArchitectSaveGame.sav</code>, located in \"YourProject\\Saved\\SaveGames\". Filter Filters presets by input text. Clear Presets Deletes all presets!"},{"location":"2.%20Overview/Components/6.Project-Settings/","title":"Project Settings","text":"<p>Spline Architect has several settings available in the Project Settings menu.</p> <p>Spline Architect settings can be accessed via Edit -&gt; Project Settings -&gt; Spline Architect (under the Plugins category).</p> <p> </p>"},{"location":"2.%20Overview/Components/6.Project-Settings/#corner-angle-increment","title":"Corner Angle Increment","text":"<p>Controls the angle increment at which new meshes for corners will be baked. To avoid generating too many baked meshes, all corner angles will be rounded according to this value. For example, if the Corner Angle Increment is 0.5, corners will be baked every 0.5 degrees (0.5, 1, 1.5, etc.), and if it\u2019s 1, then every full degree (0, 1, 2, etc.).</p>"},{"location":"2.%20Overview/Components/6.Project-Settings/#default-wall-preset","title":"Default Wall Preset","text":"<p>This sets the default <code>SplineArchitectWall</code> preset that will be used when creating new <code>SplineArchitectWall</code> actors.</p>"},{"location":"2.%20Overview/Components/6.Project-Settings/#on-level-save-action","title":"On Level Save Action","text":"<p>This setting controls what happens to <code>SplineArchitectWall</code> actors when the Level is saved. It is useful for automatically baking all <code>SplineArchitectWall</code> actors before packaging the game.</p> <p>Options available:</p> <ul> <li><code>Nothing</code> \u2013 does nothing, leaves everything as-is</li> <li><code>Rebake Unbaked</code> \u2013 bakes only those <code>SplineArchitectWall</code> actors that haven\u2019t been baked yet</li> <li><code>Rebake All</code> \u2013 bakes all <code>SplineArchitectWall</code> actors</li> <li><code>Unbake All</code> \u2013 unbakes all <code>SplineArchitectWall</code> actors</li> </ul> <p>Note: Actors will also be baked when using the Auto-Save command.</p>"},{"location":"2.%20Overview/Concepts/baking/","title":"Baking","text":"<p>Baking is one of the core features of the Spline Architect plugin. Before packaging the game, all <code>SplineArchitectWall</code> actors must be baked. This means all procedurally generated details become StaticMesh or InstancedStaticMesh components, the dynamically generated meshes are saved as StaticMesh assets, and the <code>SplineArchitectWall</code> no longer executes any logic when the Level loads (no Construction Script runs).</p> <p></p> <p></p> <p>In the <code>SplineArchitectWall</code> \"Details\" panel, there are buttons responsible for baking. You can also choose how the components will be baked: either as <code>Instanced</code> or <code>Components</code>.</p> <ul> <li>The <code>Instanced</code> bake method creates <code>InstancedStaticMeshComponent</code>s, which are more performant to render but harder to edit position, rotation, or other parameters after baking.</li> <li>The <code>Components</code> bake method creates individual <code>StaticMeshComponent</code>s, which are easier to edit but require more draw calls.</li> </ul> <p>Once a <code>SplineArchitectWall</code> is baked, its WallPreset can no longer be edited. If the preset appears grayed out, it means the actor is baked. The bake status can also be seen by checking the \"Baked\" boolean.</p> <p></p> <p></p> <p>You don\u2019t need to bake each <code>SplineArchitectWall</code> individually. The Utility Widget has buttons in the \"Bake\" section that allow you to bake or unbake all, selected, or connected <code>SplineArchitectWall</code> actors.</p> <p>More details about these buttons can be found here.</p>"},{"location":"2.%20Overview/Concepts/baking/#automatic-baking","title":"Automatic Baking","text":"<p>In the Spline Architect Project Settings, you can enable automatic baking of walls when the Level is saved. More information can be found in the Project Settings section.</p>"},{"location":"2.%20Overview/Concepts/converting/","title":"Conversion","text":"<p>Conversion is the process where Spline Architect actors are transformed into regular Unreal Engine actors.</p> <p>This allows using Spline Architect created actors in other projects that do not have the Spline Architect plugin. For example, sharing your created project with others who don\u2019t have the plugin, or uploading created assets to FAB Marketplace or similar.</p>"},{"location":"2.%20Overview/Concepts/converting/#how-to-convert-spline-architect-actors","title":"How to convert Spline Architect actors?","text":"<p>Conversion is very simple: just select the Spline Architect actors you want to convert and use the \"Convert\" functions in the Utility Widget.</p> <p>Converted actors will be placed into a \"Converted\" folder in the Outliner. Originals, if not deleted, will be placed in an \"Original\" folder.</p> Button Explanation <code>Actor per parent</code> Creates a separate actor for each parent <code>SplineArchitectWall</code>, including all of its attached child components. <code>Actor per wall</code> Creates a separate actor for each <code>SplineArchitectWall</code> with all its components \u2013 maintains parent/child hierarchy. <code>Actor per mesh</code> Creates separate <code>StaticMeshActor</code> for each used mesh \u2013 useful for manual editing later. <code>Instanced</code> Creates only <code>HierarchicalInstancedStaticMesh</code> components \u2013 better performance, harder to edit. <code>Components</code> Creates <code>StaticMeshComponent</code> components \u2013 easier to edit but requires more draw calls. Convert Selected Converts only the selected <code>SplineArchitectWall</code> actors (and all attached child actors). Convert All Converts all <code>SplineArchitectWall</code> actors in the Level. <code>Delete original?</code> Deletes the original <code>SplineArchitectWall</code> actors, leaving only the converted ones."},{"location":"lt/","title":"Prad\u017eia","text":""},{"location":"lt/#spline-architect-procedurines-sienos-pastatai-ir-strukturos-pagal-splineus","title":"Spline Architect\u00a0\u2013 Proced\u016brin\u0117s Sienos, Pastatai ir Strukt\u016bros pagal Spline'us","text":"<p>Spline Architect yra Unreal Engine 5 pluginas, kuris leid\u017eia lengvai ir greitai kurti paprastas ar sud\u0117tingas strukt\u016bras/pastatus i\u0161 modulini\u0173 mesh\u0173 non-destructive b\u016bdu, i\u0161d\u0117stym\u0105 kontroliuojant spline'ais.</p>"},{"location":"lt/#ypatybes","title":"Ypatyb\u0117s","text":"<ul> <li>Precizi\u0161ka kontrol\u0117 naudojant UE5 Spline'us</li> <li>Moduliniai meshai yra tiesiog i\u0161d\u0117liojami, tod\u0117l yra i\u0161vengiama bereikaling\u0173 jungim\u0173 \u012f atskirus, nepernaudojamus meshus</li> <li>Sugeneruoti meshai (kampai/grindys) yra u\u017evadinti atitinkamai ir yra maksimaliai pernaudojami</li> <li>Preset'\u0173 sistema leid\u017eianti greitai saugoti ir pernaudoti pastat\u0173/strukt\u016br\u0173 \u0161ablonus</li> <li>Sukurtos strukt\u016bros gali b\u016bti i\u0161bake'intos tiek \u012f <code>InstancedStaticMesh</code> komponentus (d\u0117l optimizacijos), tiek \u012f atskirus <code>StaticMesh</code> komponentus (d\u0117l lengvo koregavimo poto)</li> <li>Galimyb\u0117 konvertuoti sukurtas strukt\u016bras \u012f paprastus UE5 aktorius su komponentais (visk\u0105 galima perkelti \u012f kit\u0105 projekt\u0105 be Spline Architect plugino)</li> </ul>"},{"location":"lt/1.%20Intro/1.installation/","title":"Instaliacija","text":"<p>\u0160is puslapis pad\u0117s aktyvuoti ir susikonfig\u016bruoti Spline Architect plugin'\u0105 j\u016bs\u0173 projektui</p>"},{"location":"lt/1.%20Intro/1.installation/#1-atsisiuskite-plugina","title":"1. Atsisi\u0173skite plugin'\u0105","text":"<p>Jeigu gavote nemokam\u0105 bandom\u0105j\u0105 versij\u0105 pa\u0161tu, nukopijuokite plugino failus \u012f \"/JusuProjektas/Plugins/\" folder\u012f</p> <p></p> <p>Jeigu pirkote Spline Architect FAB parduotuv\u0117je, jums reikia atsisi\u0173sti plugin'\u0105 per Epic Games Launcher ir \u012fjungti j\u012f savo projekte.</p> <ul> <li>Raskite Spline Architect \"FAB Library\" skilyje ir spustelkite \"Install to Engine\"</li> </ul> <p></p> <ul> <li>Pasirinkite savo UE versij\u0105 ir instaliuokite plugin'\u0105</li> </ul> <p> </p> <p></p>"},{"location":"lt/1.%20Intro/1.installation/#2-aktyvuokite-plugina","title":"2. Aktyvuokite plugin'\u0105","text":"<p>Atidarykite savo UE projekt\u0105 ir spauskite Edit&gt;Plugins, raskite Spline Architect ir pa\u017eym\u0117kite varnel\u0119 (nepamir\u0161kite perkrauti Unreal Engine)</p> <p></p> <p></p>"},{"location":"lt/1.%20Intro/1.installation/#2-paleiskite-spline-architect-widgeta","title":"2. Paleiskite Spline Architect widget'\u0105","text":"<ul> <li>Spauskite Window&gt;Open Spline Architect Widget</li> </ul> <ul> <li>Atsidarius\u012f meniu galite prisegti prie savo editor'iaus kaip bet kur\u012f kit\u0105 meniu</li> </ul>"},{"location":"lt/1.%20Intro/2.how-it-works/","title":"Kaip veikia?","text":""},{"location":"lt/1.%20Intro/2.how-it-works/#veikimo-principas","title":"Veikimo principas","text":"Apra\u0161ymas Pavyzdys Spline Architect leid\u017eia kurti sienas ir pastatus i\u0161d\u0117liojant modulinius meshus pagal spline'\u0105. Mesh'ai ant kamp\u0173 yra sugeneruojami dinami\u0161kai, jie gali b\u016bt\u0173 stat\u016bs ar lenkti. Grind\u0173 mesh'ai taippat yra sugeneruojami dinami\u0161kai kiekvienam <code>SplineArchitectWall</code> unikaliai. Generacija vyksta <code>SplineArchitectWall</code> aktoriuje, <code>OnConstruct()</code> funkcijoje. Generacija vyks kiekvien\u0105 kart\u0105 j\u012f u\u017ekrovus, nebent strukt\u016bra bus i\u0161bake'inta. I\u0161bake'inus <code>SplineArchitectWall</code>, visi \u201evienkartiniai\u201c meshai yra paver\u010diami \u012f paprastus <code>StaticMesh</code> komponentus ir aktorius daugiau nebevykdo jokios logikos j\u012f kraunant. I\u0161bake'inti komponentai gali b\u016bti modifikuojami, pakeitimai laikysis iki kol <code>SplineArchitectWall</code> bus i\u0161bake'inamas i\u0161 naujo. Bake'inimo metu taip pat yra suk\u016briami <code>StaticMesh</code> asset'ai kampams ir grindims. Mesh'ai yra u\u017esaugomi su tvarkingais pavadinimais ir, esant galimybei, yra pernaudojami kitose strukt\u016brose."},{"location":"lt/1.%20Intro/2.how-it-works/#svarbus-niuansai","title":"Svarb\u016bs niuansai","text":"Apra\u0161ymas Pavyzdys Spline Architect tikisi, kad j\u016bs\u0173 moduliniai mesh'ai bus sukonfig\u016bruoti taip:- J\u0173 ilgis b\u016bt\u0173 ant X a\u0161ies- Pivot point'as X ir Y a\u0161imis per vidur\u012f ir Z a\u0161imi ant grind\u0173. Visi <code>SplineArchitectWall</code> aktoriai turi b\u016bti i\u0161bake'inti prie\u0161 package'inant \u017eaidim\u0105, kitaip \u017eaidime mesh'ai neegzistuos."},{"location":"lt/2.%20Overview/Components/1.Spline-Architect-Wall/#1-kas-yra-splinearchitectwall","title":"1. Kas yra <code>SplineArchitectWall</code>?","text":"<p><code>SplineArchitectWall</code> yra pagrindin\u0117 klas\u0117, arba aktorius, kuriame bus sugeneruotos detal\u0117s i\u0161 modulini\u0173 mesh\u0173. Tam, kad <code>SplineArchitectWall</code> generuotu meshus, jis turi tur\u0117ti <code>SplineComponent</code> komponent\u0105.</p> <p></p> <p>Priattachinus <code>SplineArchitectWall</code> prie kito <code>SplineArchitectWall</code>, priattachintas aktorius bus pastatytas ant savo parent'o ir generuos meshus ant vir\u0161aus, kaip antras auk\u0161tas ar pana\u0161iai. </p> <p></p>"},{"location":"lt/2.%20Overview/Components/1.Spline-Architect-Wall/#2-kaip-sukurti-splinearchitectwall","title":"2. Kaip sukurti <code>SplineArchitectWall</code>?","text":"<p>Sukurti <code>SplineArchitectWall</code> galima dviem b\u016bdais.</p> <ul> <li>Pirmas b\u016bdas yra rasti aktori\u0173 k\u016brimo meniu ir nutempti j\u012f \u012f level'\u012f.</li> </ul> <p></p> <p>Kad sukurtas aktorius gal\u0117t\u0173 genertuoti meshus, reikia prid\u0117ti <code>SplineComponent</code> komponent\u0105 \u012f pat\u012f aktori\u0173.</p> <p></p> <ul> <li>Antras ir paprastesnis b\u016bdas yra tiesiog paspausti \"Add Spline Wall\" mygtuk\u0105 Spline Architect pagalbiniame widget'e. \u0160itas mygtukas padarys t\u0105 pat\u012f, kaip instrukcijos vir\u0161uje. Naujas <code>SplineArchitectWall</code> bus paspawn'intas levelyje viewport'o centre ir jam bus prid\u0117tas <code>SplineComponent</code> komponentas.</li> </ul> <p></p> <ul> <li>Sukurti nauj\u0105 <code>SplineArchitectWall</code> ir priattachinti j\u012f prie pa\u017eym\u0117to <code>SplineArchitectWall</code> galima paspaudus \"Add Wall to Selected\"</li> </ul> <p></p>"},{"location":"lt/2.%20Overview/Components/1.Spline-Architect-Wall/#3-splinearchitectwall-parametrai","title":"3. <code>SplineArchitectWall</code> parametrai","text":""},{"location":"lt/2.%20Overview/Components/1.Spline-Architect-Wall/#1-preset","title":"1. Preset","text":"<p>Preset kategorija turi vienintel\u012f parametra \"Preset\" kuris yra structas nurodantis b\u016btent kaip <code>SplineArchitectWall</code> bus generuojamas, kokie mesh'ai bus naudojami ir t.t.</p>"},{"location":"lt/2.%20Overview/Components/1.Spline-Architect-Wall/#2-adjust-spline","title":"2. Adjust Spline","text":"<p>Adjust Spline kategorijoje yra funkcijos darbui su <code>SplineComponent</code> kuris yra \u0161iame aktoriuje</p> <ul> <li>Flatten Spline Points nustatys vis\u0173 Spline Point'\u0173 Z pozicij\u0105 \u012f pirmo Spline Point'o Z pozicij\u0105, pavyzd\u017eiui jeigu nety\u010dia kuris nors Spline Point'as buvo pajudintas Z a\u0161imi ar pn\u0161.</li> <li>Gridify Spline Points suapvalins Spline Point'\u0173 pozicij\u0105 pagal Grid Size vektoriaus nustatym\u0105. Naudinga pastatams, nes by default reik\u0117t\u0173 kopijuoti pozicijas i\u0161 vieno ta\u0161ko ar kito, kitaip i\u0161 rankos gaunasi kreivos linijos</li> <li>Mirror Spline X ir Y veidrodiniu b\u016bd\u0173 apkeis, flip'ins Spline Point'us, pavyzd\u017eiui jeigu norite tur\u0117ti dvi simetri\u0161kas sienas, galima vien\u0105 nukopijuoti ir mirror'inti</li> <li>Reverse Spline Points apvers Spline Point'\u0173 rikiuot\u0119, pavyzd\u017eiui jeigu pastatyta siena \u017ei\u016bri ne \u012f t\u0105 pus\u0119</li> <li>Grid Size nurodo iki koki\u0173 skai\u010di\u0173 bus apvalinama Spline Point'\u0173 pozicija</li> <li>Auto Gridify - kai \u012fjungta, Spline Point'\u0173 pozicijos bus automati\u0161kai suapvalintos</li> </ul>"},{"location":"lt/2.%20Overview/Components/1.Spline-Architect-Wall/#3-baking","title":"3. Baking","text":"<p>Baking kategorija turi kelet\u0105 funkcij\u0173 ir parametr\u0173 reikaling\u0173 nurint i\u0161bake'inti ar atbake'inti <code>SplineArchitectWall</code> aktori\u0173.    Aktorius, kuris yra i\u0161bake'intas, nebegeneruos mesh'\u0173 i\u0161 naujo ir jo WallPreset bus u\u017erakintas ir jo nebebus galima keisti, kol nebus panaudota \"UnBake\" funkcija</p> <p>Daugiau apie bake'inim\u0105</p> <ul> <li>Bake mygtukas i\u0161bake'ins \u0161i\u0105 sien\u0105</li> <li>UnBake mygtukas i\u0161bake'ins \u0161i\u0105 sien\u0105</li> <li>Baked bool'o modifikuoti negalima, jis tik rodo ar \u0161is aktorius yra i\u0161bake'intas ar ne</li> <li>Bake Method nurodo kaip bus i\u0161bake'inamas aktorius, galima pasirinkti arba \"Instanced\" arba \"Components\". Instanced naudos <code>InstancedStaticMeshComponent</code> ir bus na\u0161esnis renderinti, bet bus sunku redaguoti, o \"Components\" naudos <code>StaticMeshComponent</code> ir bus lengva pakeisti pozicij\u0105, rotacij\u0105 ar kitus parametrus po bake'inimo   </li> </ul>"},{"location":"lt/2.%20Overview/Components/1.Spline-Architect-Wall/#4-controls","title":"4. Controls","text":"<p>Controls kategorija turi kelet\u0105 funkcij\u0173 ir parametr\u0173 reikaling\u0173 valdyti \u0161\u012f konkret\u0173 <code>SplineArchitectWall</code> aktori\u0173</p> <ul> <li>CenterActorTransform mygtukas i\u0161centruos aktori\u0173 \u012f vidutin\u0119 pagrindino <code>SplineComponent</code> Spline Point'\u0173 pozicij\u0105</li> <li>ResetActorTransform mygtukas atstatys aktoriaus Scale'\u0105 \u012f 1,1,1 ir pozicij\u0105 \u012f pirmo Spline Point'o pozicij\u0105</li> <li>BooleansToUse array'us nurodantis kuriuos <code>SplineArchitectBoolean</code> aktorius \u0161is <code>SplineArchitectWall</code> aktorius naudos i\u0161kirsti skyl\u0117ms grind\u0173 ar lub\u0173 meshuose</li> <li>Seed nurodo kok\u012f random seed'\u0105 naudos \u0161is aktorius, jeigu yra naudojami randomizavimo parametrai. Norint i\u0161vengti pana\u0161iai randomizuot\u0173 aktori\u0173</li> </ul>"},{"location":"lt/2.%20Overview/Components/2.Spline-Architect-Custom-Piece/#1-kas-yra-splinearchitectcustompiece","title":"1. Kas yra <code>SplineArchitectCustomPiece</code>?","text":"<p><code>SplineArchitectCustomPiece</code> yra aktorius, kuris yra priattach'inamas prie <code>SplineArchitectWall</code> aktoriaus ir leid\u017eia \u012fterpti bet kok\u012f mesh'\u0105 tarp sien\u0173</p> <p></p>"},{"location":"lt/2.%20Overview/Components/2.Spline-Architect-Custom-Piece/#2-kaip-sukurti-splinearchitectcustompiece","title":"2. Kaip sukurti <code>SplineArchitectCustomPiece</code>?","text":"<p><code>SplineArchitectCustomPiece</code> aktorius gali b\u016bti sukurtas dviem b\u016bdais:</p> <ul> <li>Pirmas b\u016bdas yra rasti aktori\u0173 k\u016brimo meniu ir nutempti j\u012f \u012f level'\u012f. Tada reikia priattach'inti j\u012f prie <code>SplineArchitectWall</code> aktoriaus, ir jis bus prisnap'inamas prie savo parent <code>SplineArchitectWall</code> aktoriaus</li> </ul> <p></p> <ul> <li>Antras b\u016bdas yra tiesiog paspausti \"Add Custom Piece\" mygtuk\u0105 Spline Architect pagalbiniame widget'e. \u0160is mygtukas padarys t\u0105 pat\u012f, kaip ir instrukcijos vir\u0161uje. Naujas <code>SplineArchitectCustomPiece</code> bus paspawn'intas levelyje viewport'o centre ir priattach'intas prie pa\u017eym\u0117to <code>SplineArchitectWall</code> aktoriaus</li> </ul> <p></p>"},{"location":"lt/2.%20Overview/Components/2.Spline-Architect-Custom-Piece/#3-splinearchitectcustompiece-parametrai","title":"3. <code>SplineArchitectCustomPiece</code> parametrai","text":"<ul> <li>Lock Position \u0160i funkcija u\u017erakins Custom Piece ir jos pozicija liks vietoje, net jei <code>SplineArchitectWall</code> bus perkeltas ar pakeistas. Tai naudinga, kai, sakykime durys turi b\u016bti visada vienoje vietoje level'yje</li> <li>Unlock Position \u0160i funkcija atrakins Custom Piece pozicij\u0105, ir jis v\u0117l jud\u0117s kartu su savo <code>SplineArchitectWall</code> parent'u</li> <li>Custom Piece Type Custom Piece gali b\u016bti Segment arba Corner tipo. Segment tipo Custom Piece bus \u012fterptas \u012f sien\u0105, pavyzd\u017eiui durys ar langas. Corner tipo Custom Piece gali pakeisti specifinio kampo parametrus, pavyzd\u017eiui jeigu reikia vien\u0105 sienos kamp\u0105 padaryt\u012f u\u017eapvalint\u0105</li> <li>Custom Piece Mesh Tai yra mesh'as, kuris bus naudojamas kaip Custom Piece</li> <li>Input Key on Spline \u0160is parametras nurodo, kurioje vietoje Spline'e bus \u012fterptas Custom Piece. Jeigu Custom Piece yra judinamas ranka, \u0161is parametras bus rastas pagal Custom Piece pozicij\u0105. Taippat galima nurodyt\u012f specifin\u012f Spline Key, jeigu, sakykime norime \u012fterpti Custom Piece tobulai per centr\u0105 tarp dviej\u0173 Spline Point'\u0173</li> <li>Num Meshes Tai yra kiek kart\u0173 bus \u012fterptas Custom Piece. Naudinga, jeigu norite, kad Custom Piece b\u016bt\u0173 kartojamas n kart\u0173 segmente. Galima \u012fra\u0161yti labai didel\u012f skai\u010di\u0173, kad but\u0173 u\u017epildytas visas segmentas.</li> <li>Override Length Jeigu Override Length yra <code>true</code>, galima koreguoti Custom Piece Length, jeigu ne, Custom Piece Length bus apskai\u010diuotas automati\u0161kai pagal Custom Piece Mesh (ilgis X a\u0161imi)</li> <li>Custom Piece Length Tai yra Custom Piece ilgis, arba automatinis arba rankinis, priklausomai nuo Override Length parametro</li> <li>Add to Scale Tai yra vektorius, kuris bus pridedamas prie Custom Piece scale'o. Naudinga, jeigu norite padidinti ar suma\u017einti Custom Piece dyd\u012f rankiniu b\u016bdu</li> <li>Insert Type Tai yra tipas, kaip bus \u012fterptas Custom Piece. Gali b\u016bti <code>Insert</code>, arba <code>Overlap</code>. Kai <code>Insert</code>, segmentas bus i\u0161kirptas ir ten bus \u012fklijuota Custom Piece, jeigu <code>Overlap</code>, Custom Piece bus tiesiog u\u017ed\u0117tas ant esan\u010dio segmento</li> <li>Child Actor Class Tai yra klas\u0117, kuri bus naudojama kaip Child Actor. Naudinga, jeigu norite prid\u0117ti papildom\u0173 funkcij\u0173 prie Custom Piece, pavyzd\u017eiui, dinami\u0161kai atsidarin\u0117jan\u010dias duris.</li> <li>Location Locked Tai yra parametras, kuris rodo, ar Custom Piece pozicija yra u\u017erakinta ar ne. </li> <li>Locked Location Tai yra Custom Piece pozicija, kuri bus naudojama, kai Location Locked yra <code>true</code>. Naudojant Lock Position funkcij\u0105, jis bus nustatytas \u012f esam\u0105 Custom Piece pozicij\u0105. Galima modifikuoti rankiniu b\u016bdu, jeigu reikia.</li> </ul>"},{"location":"lt/2.%20Overview/Components/3.Spline-Architect-Boolean/#1-kas-yra-splinearchitectboolean","title":"1. Kas yra <code>SplineArchitectBoolean</code>?","text":"<p><code>SplineArchitectBoolean</code> yra aktorius, kuris leid\u017eia atlikti boolean operacijas su <code>SplineArchitectWall</code> grind\u0173 ar lub\u0173 meshuose. Tai leid\u017eia i\u0161kirpti skyles laiptams ar pana\u0161iai. Boolean'o forma gali b\u016bti bet koks StaticMesh asset'as</p>"},{"location":"lt/2.%20Overview/Components/3.Spline-Architect-Boolean/#2-kaip-sukurti-splinearchitectboolean","title":"2. Kaip sukurti <code>SplineArchitectBoolean</code>?","text":"<p><code>SplineArchitectBoolean</code> aktorius gali b\u016bti sukurtas dviem b\u016bdais:</p> <ul> <li>Pirmas b\u016bdas yra rasti aktori\u0173 k\u016brimo meniu ir nutempti j\u012f \u012f level'\u012f.</li> </ul> <p></p> <p></p> <ul> <li>Antras b\u016bdas yra tiesiog paspausti \"Add Boolean\" mygtuk\u0105 Spline Architect pagalbiniame widget'e. \u0160is mygtukas padarys t\u0105 pat\u012f, kaip ir instrukcijos vir\u0161uje. Naujas <code>SplineArchitectBoolean</code> bus paspawn'intas levelyje viewport'o centre. Jeigu jis liesis prie <code>SplineArchitectWall</code>, bus au\u0161omati\u0161kai \u012fd\u0117tas \u012f \"Booleans to Use\" array'\u0173 tame <code>SplineArchitectWall</code> aktoriuje.</li> </ul>"},{"location":"lt/2.%20Overview/Components/3.Spline-Architect-Boolean/#2-kaip-naudoti-splinearchitectboolean","title":"2. Kaip naudoti <code>SplineArchitectBoolean</code>?","text":"Tekstas Vaizdas <code>SplineArchitectBoolean</code> aktorius gali b\u016bti naudojamas vieno ar keli\u0173 <code>SplineArchitectWall</code> aktori\u0173. Jeigu norime i\u0161kirpti skyl\u0119 kokiame nors <code>SplineArchitectWall</code>, turime prid\u0117ti <code>SplineArchitectBoolean</code> \u012f \"Booleans to Use\" array'\u0173 <code>SplineArchitectWall</code> aktoriuje. Boolean'ai gali b\u016bt bet kokios formos, ji bus nukopijuota i\u0161 <code>StaticMesh</code> asset'o. Pakeitus <code>SplineArchitectBoolean</code> mesh'\u0105 ar pozicij\u0105, <code>SplineArchitectWall</code> aktoriai nebus automati\u0161kai atnaujinti ir jie tur\u0117s b\u016bt i\u0161 naujo sugeneruoti. T\u0105 lengvai galima padaryti paselect'inus <code>SplineArchitectWall</code> aktori\u0173 ir paspaudus \"UnBake\" ar \"Bake\" pa\u010diame aktoriuje, arba \"Unbake Connected\" ar \"Rebake Connected\" pagalbiniame widget'e."},{"location":"lt/2.%20Overview/Components/4.Wall-preset/#1-kas-yra-wall-preset","title":"1. Kas yra Wall Preset?","text":"<p>Wall Preset yra Struct'as, kuris ir nurodo, kaip atrodys sugeneruotas <code>SplineArchitectWall</code> aktorius. Jis yra <code>SplineArchitectWall</code> aktoriaus Preset kategorijoje (Details panel).</p> <p></p>"},{"location":"lt/2.%20Overview/Components/4.Wall-preset/#2-ka-daro-wall-preset-parametrai","title":"2. K\u0105 daro Wall Preset parametrai?","text":""},{"location":"lt/2.%20Overview/Components/4.Wall-preset/#floorsurfaces-parametrai-fwallpreset","title":"FloorSurfaces parametrai (FWallPreset):","text":"Parametras Pavyzdys WallHeight\u2013 Nustato sienos auk\u0161t\u012f; pagal \u0161i\u0105 reik\u0161m\u0119 scale'as pritaikomas visiems mesh\u2019ams. HeightOverride\u2013 Jeigu <code>true</code>, leid\u017eia rankiniu b\u016bdu nustatyti sienos auk\u0161t\u012f; kitu atveju <code>WallHeight</code> imamas i\u0161 pirmojo <code>WallMeshes</code> array elemento. WallLength\u2013 Nustato sienos ilg\u012f; spline segmentai bus padalinti pagal \u0161i\u0105 reik\u0161m\u0119. LengthOverride\u2013 Jeigu <code>true</code>, leid\u017eia rankiniu b\u016bdu nustatyti sienos ilg\u012f; kitu atveju <code>WallLength</code> imamas i\u0161 pirmojo <code>WallMeshes</code> array elemento. CornerLength\u2013 Nustato kampo ilg\u012f; tiek atimama i\u0161 segment\u0173, kad susidaryt\u0173 kampas. CornerLengthOverride\u2013 Jeigu <code>true</code>, leid\u017eia rankiniu b\u016bdu keisti kampo ilg\u012f; kitu atveju <code>CornerLength</code> imamas i\u0161 <code>CornerMesh</code>. RandomizeSegmentsBy\u2013 Atsitiktinai pakinta segment\u0173 ilgiai iki nurodytos ribos. WallZHandling\u2013 Nurodo, kaip tvarkyti Z a\u0161ies skirtumus tarp segment\u0173 (<code>KeepZ</code>, <code>FollowSpline</code> ir <code>Skew</code>). SkipPieces\u2013 Leid\u017eia praleisti arba palikti tam tikrus segmentus (arba tiesius arba pakreiptus). Inset\u2013 Stumia mesh\u2019us \u012f vid\u0173 arba i\u0161or\u0119 nuo spline\u2019o nurodytu atstumu. OverlapPiecesBy\u2013 Persidengimo dydis, kad mesh\u2019ai nepalikt\u0173 tarp\u0173 d\u0117l netobul\u0173 kra\u0161t\u0173. NumFloors\u2013 Kiek kart\u0173 dubliuoti segmentus su Z poslinkiu lygiu <code>WallHeight</code> (auk\u0161t\u0173 skai\u010dius). WallMeshes\u2013 Pagrindiniai sienos segment\u0173 mesh\u2019ai; pagal segmento ilg\u012f parenkamas tinkamiausias i\u0161 \u0161io array'aus. FillerWallMeshes\u2013 Papildomi mesh\u2019ai tarpams u\u017epildyti, kad pagrindiniai WallMesh'ai nei\u0161tempt\u0173 ar nesusitraukt\u0173. MinFillerWallLength\u2013 Minimalus u\u017epildymo mesh\u2019o ilgis; trumpesni mesh\u2019ai nebus dedami. KeepWorldScale\u2013 Jeigu <code>true</code>, mesh\u2019ai nebus scale'inami pagal segment\u0105, o naudos orginal\u0173 mastel\u012f. WorldScale\u2013 Mesh\u2019\u0173 orginalus scale'as, taikomas, kai <code>KeepWorldScale</code> yra <code>true</code>. CornerMesh\u2013 Mesh\u2019as, naudojamas kamp\u0173 formavimui. CornerType\u2013 Kampo tipas: <code>Straight</code>, <code>Bend</code>, <code>Chamfer</code> arba <code>Pipe</code>. OffsetBy\u2013 Visus mesh\u2019us pastumia nurodytu vektoriumi. RandomizeLocationBy\u2013 Atsitiktinai pakinta mesh\u2019\u0173 pad\u0117tis pagal \u0161\u012f vektori\u0173 (rekomenduojama ma\u017eos vert\u0117s, kad neb\u016bt\u0173 Z-fightingo). FloorSurfaces\u2013 Grind\u0173 konfig\u016bracijos array'us, kuriame kiekvienas elementas apra\u0161o grind\u0173 pavir\u0161iaus parametrus. PostConfigurations\u2013 Stulp\u0173 konfig\u016bracijos array'us, nustatantis, kaip ir kur bus generuojami stulpai. RandomisationSettings\u2013 Atsitiktinumo nustatymai, leid\u017eiantys atsitiktinai keisti mesh'\u0173 i\u0161d\u0117stym\u0105 ir transformacijas. MaterialParameters\u2013 Material parametr\u0173 array'us, leid\u017eiantis nustatyti specifini\u0173 material\u0173 parametrus ant tam tikr\u0173 mesh'\u0173."},{"location":"lt/2.%20Overview/Components/4.Wall-preset/#floorsurfaces-parametrai-ffloordata","title":"FloorSurfaces parametrai (FFloorData):","text":"Parametras Pavyzdys Material\u2013 Material'as, kuri bus pritaikyta grind\u0173 pavir\u0161iui. AlignTo\u2013 Grind\u0173 lygiavimas santykyje su pagrindin\u0117mis sienomis: <code>Top</code>, <code>Center</code> arba <code>Bottom</code>. ZOffset\u2013 Vertikalus paslinkimas grind\u0173 pozicijai. Inset\u2013 Grind\u0173 \u012ftraukimas \u012f vid\u0173 ar i\u0161or\u0119 nuo sienos kont\u016bro. Thickness\u2013 Grind\u0173 storis (extrude auk\u0161tis). Subdivisions\u2013 Kontroliuoja grind\u0173 poligon\u0173 skai\u010di\u0173. BendsResolution\u2013 Nustato atstum\u0105 tarp vertex'\u0173 ant lenkt\u0173 kamp\u0173. UVScale\u2013 Kei\u010dia grind\u0173 UV koordina\u010di\u0173 mastel\u012f. FillColor\u2013 Vertex spalva, taikoma visiems vertexams, i\u0161skyrus kra\u0161tines. EdgesColor\u2013 Vertex spalva kra\u0161tin\u0117ms. ColorBlurIterations\u2013 Daugiau iteracij\u0173 labiau sulieja grind\u0173 mesh'o vertex spalvas. UseDelaunayTriangulation\u2013 Delaunay trianguliacija suteikia geresn\u0119 trianguliacij\u0105, bet kra\u0161tai negali persidengt vienas ant kito. Jei grind\u0173 mesh'as neveikia, pabandykite i\u0161jungti \u0161\u012f parametr\u0105."},{"location":"lt/2.%20Overview/Components/4.Wall-preset/#postconfigurations-parametrai-fpostdata","title":"PostConfigurations parametrai (FPostData):","text":"Parametras Pavyzdys PostMesh\u2013 Mesh'as, naudojamas stulp\u0173 generavimui. GenerationMethod\u2013 Stulp\u0173 generavimo metodas: <code>OnCorners</code>, <code>OnSplinePoints</code>, <code>BetweenSegments</code>, <code>OnCustomPieces</code>, <code>Periodically</code>, <code>StartAndEnd</code>. AverageDirections\u2013 Taikoma tik kai <code>GenerationMethod</code> yra <code>OnSplinePoints</code>. Vidutini\u0161kai apskai\u010diuoja kryptis. PeriodDistance\u2013 Taikoma tik kai <code>GenerationMethod</code> yra <code>Periodically</code>. Nustato atstum\u0105 tarp stulp\u0173. PostOffset\u2013 Pastumia stulpus nurodytu vektoriumi (X - palei spline'\u0105, Y - \u012f vid\u0173/i\u0161or\u0119, Z - vertikaliai). AddRotation\u2013 Prideda sukim\u0105 visiems stulpams. bScaleToWallHeight\u2013 Automati\u0161kai kei\u010dia stulpo scale'\u0105, kad atitikt\u0173 <code>WallHeight</code>. PostScale\u2013 Koreguoja stulpo scale'\u0105. SkipRule\u2013 Gali praleisti stulpus, jei segmentas yra plok\u0161\u010dias arba pasvir\u0119s."},{"location":"lt/2.%20Overview/Components/4.Wall-preset/#randomisationsettings-parametrai-frandomsettings","title":"RandomisationSettings parametrai (FRandomSettings):","text":"Parametras Pavyzdys RandomMeshes\u2013 array'us <code>FRandomMeshes</code> strukt\u016br\u0173, kurios nustato atsitiktinio mesh'\u0173 keitimo taisykles."},{"location":"lt/2.%20Overview/Components/4.Wall-preset/#frandommeshes-parametrai","title":"FRandomMeshes parametrai:","text":"Parametras Pavyzdys KeyMesh\u2013 Ie\u0161komas mesh'as, kuris bus kei\u010diamas atsitiktiniu i\u0161 <code>RandomMeshes</code> array'aus (\u012fskaitant <code>KeyMesh</code>). RandomMeshes\u2013 Mesh'\u0173 array'us su weight'ais (<code>FRandomMeshWithWeight</code>), i\u0161 kurio atsitiktinai parenkamas. Didesnis weight'as padidins \u0161ans\u0105 \u0161iam mesh'ui FitRandomType\u2013 <code>MatchScale</code> arba <code>KeepScale</code> - nustato, ar i\u0161laikyti original\u0173 scale'\u0105 ar suscale'inti mesh\u0105 taip, kad tilpt\u0173 \u012f key mesh'\u0105. Knockout\u2013 Kontroliuoja, kiek mesh'\u0173 bus atsitiktinai pa\u0161alinta (0.0f = n\u0117 vienas, 1.0f = visi). MirrorX/Y/Z\u2013 Galimyb\u0117 padauginti scale'\u0105 i\u0161 -1. Veikia tik konvertuojant \u012f <code>StaticMeshComponents</code>. Rot90\u2013 Atsitiktinai pasuka mesh'us 90, 180 arba 270 laipsni\u0173. Rot180\u2013 Atsitiktinai pasuka mesh'us tik 180 laipsni\u0173."},{"location":"lt/2.%20Overview/Components/4.Wall-preset/#materialparameters-parametrai-fmatparams","title":"MaterialParameters parametrai (FMatParams):","text":"Parametras Pavyzdys MaterialApplicationMode\u2013 Materialo taikymo re\u017eimas: <code>Include</code> (tik nurodytos), <code>Exclude</code> (i\u0161skyrus nurodytas), <code>All</code> (visoms). MaterialReferences\u2013 Material\u0173 s\u0105ra\u0161as, prie kuri\u0173 taikyti parametrus (kai re\u017eimas ne <code>All</code>). MeshApplicationMode\u2013 Mesh'\u0173 pasirinkimo re\u017eimas: <code>Include</code>, <code>Exclude</code> arba <code>All</code>. Galime keisti Material parametrus tik ant specifini\u0173 mesh\u0173, jeigu reikia StaticMeshReferences\u2013 Mesh'\u0173 s\u0105ra\u0161as, prie kuri\u0173 taikyti parametrus (kai re\u017eimas ne <code>All</code>). Galime keisti Material parametrus tik ant specifini\u0173 mesh\u0173, jeigu reikia Parameters\u2013 Material parametr\u0173 array'us (<code>FMatParam</code>)."},{"location":"lt/2.%20Overview/Components/4.Wall-preset/#fmatparam-parametrai","title":"FMatParam parametrai:","text":"Parametras Pavyzdys ParameterName\u2013 Material parametro pavadinimas, kur\u012f norime pakeisti. ParameterType\u2013 Parametro tipas: <code>Float</code> arba <code>Vector</code>. FloatValue\u2013 Float reik\u0161m\u0117 (kai tipas <code>Float</code>). ColorValue\u2013 Spalvos reik\u0161m\u0117 (kai tipas <code>Vector</code>)."},{"location":"lt/2.%20Overview/Components/5.Widgets/","title":"Widget'ai","text":"<p>Spline Architect turi 2 widget'us, kurie sukurti tam, kad palengvinti ir pagreitinti darb\u0105 su pluginu.</p> <ul> <li>W_SplineArchitectUtilityWidget'as turi funkcijas greitai prid\u0117ti naujus aktorius, kaip <code>SplineArchitectWall</code>, <code>SplineArchitectBoolean</code> ar <code>SplineArchitectCustomPiece</code>, taip pat turi funkcijas greitai paselect'inti ar i\u0161bake'inti visus/pasirinktus/sujungtus <code>SplineArchitectWall</code> aktorius, taippat konvertuoti \u012f paprastus aktorius. Taippat yra funkcij\u0173 darbui su Spline'ais</li> <li>W_WallPresets widget'as yra skirtas greitai sukurti naujus <code>SplineArchitectWall</code> preset'us, kurie gali b\u016bti arba pavieni\u0173 <code>SplineArchitectWall</code> aktori\u0173 Preset'ai, arba Preset'ai, kurie sudaryti i\u0161 daugiau nei vieno <code>SplineArchitectWall</code> aktoriaus ir dar gali b\u016bt\u0173 su CustomPiece'ais. Pavyzd\u017eiui pilni pastatai</li> </ul> <p>Widget'ai gali b\u016bti atidaryt einant \u012f Window &gt; Open Spline Architect Widget/Wall Presets</p> <p></p>"},{"location":"lt/2.%20Overview/Components/5.Widgets/#utility-widgetas","title":"Utility Widget'as","text":""},{"location":"lt/2.%20Overview/Components/5.Widgets/#create","title":"Create","text":"Mygtukas Paai\u0161kinimas Add Spline Wall Sukuria nauj\u0105 <code>SplineArchitectWall</code> Level\u2019yje ir prideda prie jo <code>SplineComponent</code>. Add Wall to Selected Prideda nauj\u0105 <code>SplineArchitectWall</code> \u012f Level\u2019\u012f ir automati\u0161kai attach\u2019ina ant \u0161iuo metu pa\u017eym\u0117to <code>SplineArchitectWall</code>'o (taip pat nukopijuoja <code>WallPreset</code> i\u0161 pa\u017eym\u0117to <code>SplineArchitectWall</code>'o) Add CustomPiece Spawn\u2019ina <code>CustomPiece</code> ekrano centre ir attach\u2019ina j\u012f prie pa\u017eym\u0117to <code>SplineArchitectWall</code>'o Add Boolean Spawn\u2019ina <code>SplineArchitectBoolean</code> ekrano centre. Jei yra pa\u017eym\u0117tas <code>SplineArchitectWall</code>, Boolean\u2019as automati\u0161kai pridedamas \u012f jo \u201cBooleans to Use\u201d array\u2019\u0173 Clean Selected Palieka tik pagrindin\u012f <code>SplineArchitectWall</code>'\u0105 ir i\u0161trina visus prie jo attach\u2019intus actor\u2019ius. Taip pat nustato \u0161var\u0173 <code>WallPreset</code>"},{"location":"lt/2.%20Overview/Components/5.Widgets/#select","title":"Select","text":"Mygtukas Paai\u0161kinimas Select Parents Pasirenkami tik parent <code>SplineArchitectWall</code>'ai su <code>SplineComponent</code> i\u0161 dabartinio selection\u2019o Select Connected Pasirenkami visi attach\u2019inti <code>SplineArchitectWall</code>'ai, <code>CustomPiece</code>'ai ar kiti actor\u2019iai \u2014 parent ir child Walls \u2611\ufe0fPieces \u2611\ufe0fOther \u2611\ufe0f Galima \u012ftraukti arba atmesti <code>SplineArchitectWall</code>, <code>SplineArchitectCustomPiece</code> ar kitus actor\u2019ius"},{"location":"lt/2.%20Overview/Components/5.Widgets/#spline","title":"Spline","text":"Mygtukas Paai\u0161kinimas StaticMesh dropdown \ud83d\udd3d Pasirenkamas <code>StaticMesh</code> (plok\u0161tuma su atvirais kra\u0161tais), kuris bus naudojamas kaip \u0161ablonas Set points Paima border edge\u2019us i\u0161 pa\u017eym\u0117to mesh\u2019o, esan\u010dio <code>Plugins/SplineArchitect/Meshes/BasicShapes</code> kataloge, ir pagal juos sugeneruoja spline point\u2019us pa\u017eym\u0117tiems <code>SplineArchitectWall</code>'ams Refresh Paskenuoja <code>Plugins/SplineArchitect/Meshes/BasicShapes</code> folder\u2019\u012f ir atnaujina dropdown\u2019o pasirinkimus"},{"location":"lt/2.%20Overview/Components/5.Widgets/#bake","title":"Bake","text":"<p>Daugiau apie bake'inim\u0105</p> Mygtukas Paai\u0161kinimas Unbake Connected At-bake\u2019ina visus pa\u017eym\u0117tus <code>SplineArchitectWall</code>'us (t\u0117vinius ir vaikus) ReBake Connected I\u0161 naujo bake\u2019ina visus pa\u017eym\u0117tus <code>SplineArchitectWall</code>'us (t\u0117vinius ir vaikus) Unbake All At-bake\u2019ina visus <code>SplineArchitectWall</code>'us Level\u2019yje ReBake All Bake\u2019ina visus <code>SplineArchitectWall</code>'us Level\u2019yje Bake Unbaked Bake\u2019ina tik tuos <code>SplineArchitectWall</code>'us, kurie dar n\u0117ra bake\u2019inti"},{"location":"lt/2.%20Overview/Components/5.Widgets/#convert","title":"Convert","text":"<p>Daugiau apie konvertavim\u0105</p> Mygtukas Paai\u0161kinimas Actor per parent \ud83d\udd3d - Actor per wall \u2013 sukurs po vien\u0105 actor\u2019\u012f kiekvienam <code>SplineArchitectWall</code>, kuriame bus instancinti StaticMesh\u2019ai.- Actor per parent \u2013 sukurs po actor\u2019\u012f kiekvienam <code>SplineArchitectWall</code>, paliekant t\u0117vo/vaiko strukt\u016br\u0105.- Actor per mesh \u2013 sukurs po atskir\u0105 <code>StaticMeshActor</code> kiekvienam mesh\u2019ui, naudinga kai norisi rankiniu b\u016bdu redaguoti. Components \ud83d\udd3d - Instanced \u2013 sukurs tik <code>HierarchicalInstancedStaticMesh</code> komponentus. Naudoja ma\u017eiau draw call\u2019\u0173, bet sunkiai redaguojama.- Components \u2013 sukurs <code>StaticMeshComponent</code> kiekvienam mesh\u2019ui, lengviau redaguoti, bet reikalauja daugiau draw call\u2019\u0173. Convert Selected Konvertuoja pa\u017eym\u0117tus <code>SplineArchitectWall</code>'us \u012f paprastus actor\u2019ius su komponentais. Naudinga kai projektas neturi <code>SplineArchitect</code> plugino Convert All Konvertuoja visus <code>SplineArchitectWall</code>'us \u012f paprastus actor\u2019ius su komponentais Delete original? \u2611\ufe0f I\u0161trina originalius <code>SplineArchitect</code> actor\u2019ius ir palieka tik konvertuotus"},{"location":"lt/2.%20Overview/Components/5.Widgets/#presets-widgetas","title":"Presets Widget'as","text":""},{"location":"lt/2.%20Overview/Components/5.Widgets/#walls","title":"Walls","text":"<ul> <li>Tik sien\u0173 preset'ai. Leid\u017eia greitai kopijuoti/\u012fklijuoti atskir\u0173 SplineArchitectWall preset'us i\u0161 pa\u017eym\u0117t\u0173 aktori\u0173</li> </ul> Mygtukas Apra\u0161ymas Copy Nukopijuoja WallPreset struct'\u0105 i\u0161 pa\u017eym\u0117to SplineArchitectWall ir i\u0161saugo j\u012f kaip SaveGame fail\u0105 SplineArchitectWallPresets.sav aplanke \u201eYourProject\\Saved\\SaveGames\u201c"},{"location":"lt/2.%20Overview/Components/5.Widgets/#buildings","title":"Buildings","text":"<ul> <li>Preset'ai, sudaryti i\u0161 keli\u0173 SplineArchitectWall ar CustomPiece. Leid\u017eia greitai nukopijuoti/pakartoti vis\u0105 pastato strukt\u016br\u0105</li> </ul> Mygtukas Apra\u0161ymas Copy Nukopijuoja SplineArchitectWall hierarchij\u0105 (ir, jei norima, CustomPiece) \u012f preset'\u0105. Galima \u012fklijuoti ant kito SplineArchitectWall, turin\u010dio spline \u2014 taip atkartojant vis\u0105 pastato stack'\u0105 Paste \u012eklijuoja anks\u010diau nukopijuot\u0105 hierarchij\u0105 ant pasirinkto SplineArchitectWall. Jei jis neturi SplineComponent, ie\u0161kos vir\u0161utinio t\u0117vinio aktoriaus, kuris turi spline Copy Pieces? Ar kopijuoti ir CustomPiece aktorius, kurie prijungti prie pa\u017eym\u0117to pastato PresetName Preset'o pavadinimas Save Preset I\u0161saugo preset'\u0105 kaip SaveGame fail\u0105 \u201eSplineArchitectSaveGame.sav\u201c, kuris atsiranda \u201eYourProject\\Saved\\SaveGames\u201c aplanke Filter Filtruoja preset'us pagal \u012fvest\u0105 tekst\u0105 Clear Presets I\u0161trina visus preset'us!"},{"location":"lt/2.%20Overview/Components/6.Project-Settings/","title":"Project Settings","text":"<p>Spline Architect turi kelet\u0105 nustatym\u0173 Project Settings meniu.</p> <p>Spline Architect nustatymai pasiekiami per Edit -&gt; Project Settings -&gt; Spline Architect. (Plugins kategorijoje)</p> <p> </p>"},{"location":"lt/2.%20Overview/Components/6.Project-Settings/#corner-angle-increment","title":"Corner Angle Increment","text":"<p>Kontroliuoja kas kiek laipsni\u0173 bus bake'inamas naujas mesh'as kampams. Kad i\u0161vengti per daug i\u0161bake'int\u0173 mesh\u0173, viskas bus apvalinama pagal \u0161it\u0105 parametr\u0105. Pvz, jeigu Corner Angle Increment yra 0.5, tai kampai bus i\u0161bake'inti kas 0.5 laipsnio (0.5, 1, 1.5 ir t.t.), o jeigu 1, tai kas 1 laipsn\u012f (0, 1, 2 ir t.t.)</p>"},{"location":"lt/2.%20Overview/Components/6.Project-Settings/#default-wall-preset","title":"Default Wall Preset","text":"<p>\u010cia yra nustatomas default <code>SplineArchitectWall</code> preset'as, kuris bus naudojamas kuriant naujus <code>SplineArchitectWall</code> aktorius.</p>"},{"location":"lt/2.%20Overview/Components/6.Project-Settings/#on-level-save-action","title":"On Level Save Action","text":"<p>\u0160is nustatymas kontroliuoja, kas bus daroma su <code>SplineArchitectWall</code> aktoriais, kai yra i\u0161saugomas Level'is. Tai yra naudinga, kad b\u016bt\u0173 galima automati\u0161kai i\u0161bake'inti visus <code>SplineArchitectWall</code> aktorius prie\u0161 package'inant \u017eaidim\u0105.</p> <p>Galima pasirinkti:</p> <ul> <li><code>Nothing</code> - nieko nedaro, palieka visk\u0105 taip kaip yra</li> <li><code>Rebake Unbaked</code> - i\u0161bake'ina tik tuos <code>SplineArchitectWall</code> aktorius, kurie n\u0117ra i\u0161bake'inti</li> <li><code>Rebake All</code> - i\u0161bake'ina visus <code>SplineArchitectWall</code> aktorius</li> <li><code>Unbake All</code> - atbake'ina visus <code>SplineArchitectWall</code> aktorius</li> </ul> <p>Pastaba: Aktoriai taip pat bus bake'inami vystant Auto-Save komandai.</p>"},{"location":"lt/2.%20Overview/Concepts/baking/","title":"Bake'inimas","text":"<p>Bake'inimas yra vienas i\u0161 esmini\u0173 dalyk\u0173 Spline Architect plugin'e. Prie\u0161 package'inant \u017eaidim\u0105, visi <code>SplineArchitectWall</code> turi b\u016bti i\u0161bake'inti. Tai rei\u0161kia, kad visos sugeneruotos detal\u0117s taps StaticMesh ar InstancedStaticMesh komponentais, dinami\u0161kai sugeneruotos detal\u0117s bus u\u017esaugotos, kaip StatcMesh asset'ai ir <code>SplineArchitectWall</code> nebevykdys jokios logikos pasileid\u017eiant Level'iui (jokio ConstructionScript).</p> <p></p> <p></p> <p><code>SplineArchitectWall</code> \"Details\" panel'yje yra mygtukai atsakingi u\u017e bake'inim\u0105. Taippat yra pasirinkimas, kaip bus i\u0161bake'inti komponentai. <code>Instanced</code> arba <code>Components</code></p> <ul> <li><code>Instanced</code> bake metodu bus sukurti <code>InstancedStaticMeshComponent</code> komponentai, kurie bus na\u0161esni renderinti, bet bus sunku redaguoti pozicij\u0105, rotacij\u0105 ar kitus parametrus po bake'inimo.</li> <li><code>Components</code> bake metodu bus sukurti <code>StaticMeshComponent</code> komponentai, kurie bus lengvai redaguojami, bet reikalauja daugiau draw call'\u0173.</li> </ul> <p>I\u0161bake'inus <code>SplineArchitectWall</code> WallPreset'o nebebus galima redaguoti, ir jeigu jis bus 'grayed-out', rei\u0161kia \u0161is aktorius yra i\u0161bake'intas. Taip pat, bake status\u0105 galima matyti pa\u017ei\u016br\u0117jus \u012f \"Baked\" bool'\u0105.</p> <p></p> <p></p> <p>Norint i\u0161bake'inti <code>SplineArchitectWall</code>, nereikia to daryti kiekvienam <code>SplineArchitectWall</code> atskirai. Galima naudotis \"Bake\" skiltyje esan\u010diais mygtukais Utility Widget'e. Galima i\u0161bake'inti ar atbake'inti visus, pasirinktus ar sujungtus <code>SplineArchitectWall</code> aktorius. Daugiau apie \u0161iuos mygtukus galima rasti \u010dia</p>"},{"location":"lt/2.%20Overview/Concepts/baking/#automatinis-bakeinimas","title":"Automatinis bake'inimas","text":"<p>Spline Architect Project Settings'uose galima nusistatyti, kad sienos b\u016bt\u0173 automati\u0161kai i\u0161bake'inamos tuo metu, kai yra save'inamas Level'is. Daugiau apie tai Project Settings skiltyje</p>"},{"location":"lt/2.%20Overview/Concepts/converting/","title":"Konvertavimas","text":"<p>Konvertavimas yra procesas, kurio metu Spline Architect aktoriai yra paver\u010diami \u012f \u012fprastus Unreal Engine aktorius. </p> <p>Tai leid\u017eia naudoti Spline Architect sukurtus aktorius kituose projektuose, kurie neturi Spline Architect plugin'o. Pavyzd\u017eiui pasidalinti sukurtu projektu su kitais \u017emon\u0117mis, kurie neturi Spline Architect plugin'o, arba kelti sukurtus asset'us \u012f FAB Marketplace ar pana\u0161iai.</p>"},{"location":"lt/2.%20Overview/Concepts/converting/#kaip-konvertuoti-spline-architect-aktorius","title":"Kaip konvertuoti Spline Architect aktorius?","text":"<p>Konvertavimas yra labai paprastas. Tereikia pa\u017eym\u0117ti Spline Architect aktorius, kuriuos norite konvertuoti, ir naudotis \"Convert\" funkcijomis Utility Widget'e.</p> <p>Konvertuoti aktoriai bus patalpinami \u012f \"Converted\" folder\u012f Outliner'yje. Orgianl\u016bs aktoriai, jeigu nebuvo i\u0161trinti bus patalpint \"Original\" folderyje</p> Mygtukas Paai\u0161kinimas <code>Actor per parent</code> Sukurs atskir\u0105 aktori\u0173 kiekvienam t\u0117viniam <code>SplineArchitectWall</code>, su visais jo ir jo priattach'int\u0173 child'\u0173 komponentais <code>Actor per wall</code> Sukurs atskir\u0105 aktori\u0173 kiekvienam <code>SplineArchitectWall</code>, su visais jo komponentais \u2013 i\u0161laiko t\u0117vo/vaiko strukt\u016br\u0105. <code>Actor per mesh</code> Sukurs atskirus <code>StaticMeshActor</code> kiekvienam naudojamam mesh\u2019ui \u2013 patogu v\u0117lesniam rankiniam koregavimui. <code>Instanced</code> Sukurs tik <code>HierarchicalInstancedStaticMesh</code> komponentus \u2013 geresnis na\u0161umas, sunkiau redaguoti. <code>Components</code> Sukurs <code>StaticMeshComponent</code> \u2013 lengviau redaguoti, bet reikalauja daugiau draw call\u2019\u0173. Convert Selected Konvertuoja tik pa\u017eym\u0117tus <code>SplineArchitectWall</code> (ir visus attach'intus aktorius) Convert All Konvertuoja visus <code>SplineArchitectWall</code> aktorius Level'yje <code>Delete original?</code> I\u0161trina originalius <code>SplineArchitectWall</code> aktorius palikdamas tik konvertuotus."}]}